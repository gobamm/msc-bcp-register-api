name: Build & Deploy bcp-register-api(dev)

on:
  workflow_dispatch:
  push:
    branches: [ "develop" ]

permissions:
   id-token: write
   contents: read
   actions: read

jobs:

  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check GITHUB_TOKEN Scope
      run: |
        curl -H "Authorization: token ${{ secrets.ORG_PAT }}" \
        https://api.github.com

    - name: Run Linter
      uses: github/super-linter@v4
      env:
        VALIDATE_PYTHON: true
        FILTER_REGEX_INCLUDE: .*\.(py)$
        GITHUB_TOKEN: ${{ secrets.ORG_PAT }}
        LOG_FILE: /tmp/super-linter.log  # Specify the log file location        
      continue-on-error: true

    - name: Upload Linter Results
      uses: actions/upload-artifact@v3
      with:
        name: linter-results
        path: /tmp/super-linter.log
    
    - name: Run Unit Tests
      run: |
        pip install pytest pytest-cov 
        pytest --cov=src tests/

    - name: Build the Docker image
      run: |
        cd src 
        docker build . --file Dockerfile --tag ghcr.io/gobamm/msc-bcp-register-api:latest
#        docker build . --file Dockerfile --tag ghcr.io/bcp-dev-team/msc-bcp-register-api:$(date +%s)
##        docker tag ghcr.io/bcp-dev-team/msc-bcp-register-api:$(date +%s) ghcr.io/bcp-dev-team/msc-bcp-register-api:latest

    # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
       registry: ghcr.io
       username: ${{ github.actor }}
       password: ${{ secrets.ORG_PAT }}

   # Push the Docker image
    - name: Push Docker image
      run: docker push ghcr.io/gobamm/msc-bcp-register-api:latest


  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
     # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Use kubelogin to configure your kubeconfig for Azure auth
    - name: Set up kubelogin for non-interactive login
      uses: azure/use-kubelogin@v1
      with:
       kubelogin-version: 'v0.0.25'

    # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
    - name: Get K8s context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ vars.RESOURCE_GROUP }}
        cluster-name: ${{ vars.CLUSTER_NAME }}
        admin: 'false'
        use-kubelogin: 'true'

    # Runs Kustomize to create manifest files
    - name: Bake deployment
      uses: azure/k8s-bake@v3
      with:
        renderEngine: "kustomize"
        kustomizationPath: ${{ vars.KUSTOMIZE_PATH }}
        kubectl-version: latest
      id: bake

    # Deploys application based on manifest files from previous step
    - name: Deploy application
      uses: Azure/k8s-deploy@v4
      with:
        action: deploy
        namespace: bcp-register
        manifests: ${{ steps.bake.outputs.manifestsBundle }}

